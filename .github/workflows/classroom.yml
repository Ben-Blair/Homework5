name: GitHub Classroom Workflow

on: [push]

jobs:
  build:
    name: Autograding
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name:  Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'adopt'
          cache: gradle
      - name: Make gradlew executable
        id: gradlew-executable
        run: chmod +x ./gradlew
      - name: Run All Instructor Tests
        uses: education/autograding@v1
      #
      #          - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      #          - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      #          - name:  Set up JDK 11
      #            uses: actions/setup-java@v3
      #            with:
      #              java-version: 11
      #              distribution: 'adopt'
      #              cache: gradle
      #          - name: Tests
      #            if: always()
      #            # running testFileComparisonFinal forces all other tests to run first because it is dependent upon them all
      #            #        run: ./gradlew testFileComparisonFinal  # Use this for windows OR macos platform runs
      #            run: xvfb-run ./gradlew test
      - name: StyleTest
        if: always()
        run: ./gradlew checkstyleMain
      #      - name: Autograde repository code
      #        uses: education/autograding@v1
      #      - name: List files in the repository
      #        run: |
      #          ls -R ${{ github.workspace }}
      #            - name: Get output
      #              if: always()
      #              run: |
      #                cat //home/runner/work/hw2-lwclement/hw2-lwclement/build/test-results/createPngSize1/TEST-CreatePngTest.xml
      - run: echo "üçè This job's status is ${{ job.status }}."
        if: always()
